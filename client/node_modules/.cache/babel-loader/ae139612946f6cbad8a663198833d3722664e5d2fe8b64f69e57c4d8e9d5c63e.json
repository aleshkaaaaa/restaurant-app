{"ast":null,"code":"var _jsxFileName = \"/Users/alekseyabashkin/Desktop/restaurant app/client/src/pages/CreateRestaurantPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateRestaurantPage() {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    foodType: '',\n    location: ''\n  });\n  async function createNewRestaurant(ev) {\n    ev.preventDefault();\n    try {\n      const response = await fetch('http://localhost:4000/post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        console.log('Restaurant created successfully!');\n      } else {\n        console.error('Failed to create restaurant.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewRestaurant,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      value: formData.title,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      value: formData.description,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"foodType\",\n      placeholder: \"\\u041A\\u0443\\u0445\\u043D\\u044F\",\n      value: formData.foodType,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      placeholder: \"\\u041B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F\",\n      value: formData.location,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0440\\u0435\\u0441\\u0442\\u043E\\u0440\\u0430\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateRestaurantPage, \"LczCg4cSTPL5JQo+ViRQCyIKymc=\");\n_c = CreateRestaurantPage;\nvar _c;\n$RefreshReg$(_c, \"CreateRestaurantPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateRestaurantPage","_s","formData","setFormData","title","description","foodType","location","createNewRestaurant","ev","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","handleInputChange","event","name","value","target","prevState","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","_c","$RefreshReg$"],"sources":["/Users/alekseyabashkin/Desktop/restaurant app/client/src/pages/CreateRestaurantPage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function CreateRestaurantPage() {\n    const [formData, setFormData] = useState({\n        title: '',\n        description: '',\n        foodType: '',\n        location: ''\n    });\n\n    async function createNewRestaurant(ev) {\n        ev.preventDefault();\n        try {\n            const response = await fetch('http://localhost:4000/post', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(formData)\n            });\n\n            if (response.ok) {\n                console.log('Restaurant created successfully!');\n            } else {\n                console.error('Failed to create restaurant.');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    }\n\n    function handleInputChange(event) {\n        const { name, value } = event.target;\n        setFormData(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    return (\n        <form onSubmit={createNewRestaurant}>\n            <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Название\"\n                value={formData.title}\n                onChange={handleInputChange}\n            />\n            <input\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Описание\"\n                value={formData.description}\n                onChange={handleInputChange}\n            />\n            <input\n                type=\"text\"\n                name=\"foodType\"\n                placeholder=\"Кухня\"\n                value={formData.foodType}\n                onChange={handleInputChange}\n            />\n            <input\n                type=\"text\"\n                name=\"location\"\n                placeholder=\"Локация\"\n                value={formData.location}\n                onChange={handleInputChange}\n            />\n            <button style={{ marginTop: '5px' }}>Добавить ресторан</button>\n        </form>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}